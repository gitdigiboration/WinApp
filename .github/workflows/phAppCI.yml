name: Build
on:
  push:
    branches:
      - master
      
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: windows-latest
    env:
      Solution_Name: PhApp.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
     # Test_Project_Path: WinAppUnitTest\WinAppUnitTest.csproj               # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      Project_Build_Directory: PhApp\bin\             # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      Project_Path: PhApp\PhApp.csproj                   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.
      Test_Project_Path: WinAppUnitTest\WinAppUnitTest.csproj
    steps:
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install Sonar global tool
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin Sonar scan
        run: dotnet sonarscanner begin /k:"${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="WinAppUnitTest/coverage.opencover.xml" /o:"orgname" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"

      - name: Build and run unit tests
        run: |
           MsBuild.exe /t:Rebuild $env:Solution_Name
           
           cd ./WinAppUnitTest/
           dotnet test --no-build --no-restore --verbosity normal -p:CollectCoverage=true -p:CoverletOutputFormat=opencover
       
      - name: End Sonar scan
        run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
